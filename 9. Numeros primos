# ------------------------------------------------------------------------------
# Nombre del Programa: Identifica numeros primos
# Descripción      : Identifica numeros primos 
# Autor            : [De Haro Exzacarias Julio Cesar]
# Fecha            : [05-11-2024]
# Versión          : 1.0
# Arquitectura     : ARM64 en AWS EC2
# Requisitos       : Python 3.6+
# ------------------------------------------------------------------------------
REFERENCIA
public class PrimeChecker {
    public static bool IsPrime(int number) {
        if (number <= 1) return false;
        if (number == 2) return true;
        if (number % 2 == 0) return false;

        int boundary = (int)Math.Floor(Math.Sqrt(number));

        for (int i = 3; i <= boundary; i += 2) {
            if (number % i == 0) return false;
        }
        return true;
    }
}
------------------------------------------------------------------------------
.global _start
    .text
_start:
    // Input number to check
    mov x19, #17         // number to check
    
    // Check if number <= 1
    cmp x19, #1
    ble not_prime
    
    // Check if number == 2
    cmp x19, #2
    beq is_prime
    
    // Check if even
    and x0, x19, #1
    cbz x0, not_prime
    
    // Initialize loop counter
    mov x20, #3          // i = 3
    
loop:
    // Calculate square root boundary
    mov x0, x19
    bl sqrt              // Placeholder for square root calculation
    mov x21, x0          // boundary = sqrt(number)
    
    // Check loop condition
    cmp x20, x21
    bgt is_prime
    
    // Check if number is divisible by i
    udiv x22, x19, x20
    msub x23, x22, x20, x19  // remainder = number - (quotient * divisor)
    cbz x23, not_prime
    
    // Increment i by 2
    add x20, x20, #2
    b loop
    
is_prime:
    mov x0, #1
    b end
    
not_prime:
    mov x0, #0
    
end:
    // Exit program
    mov x8, #93
    svc #0

sqrt:
    // Placeholder for square root calculation
    // In practice, you'd implement a proper square root algorithm
    ret
