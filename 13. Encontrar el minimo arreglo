# ------------------------------------------------------------------------------
# Nombre del Programa: Encontrar el minimo arreglo
# Descripción      : Encuentra el minimo arreglo
# Autor            : [De Haro Exzacarias Julio Cesar]
# Fecha            : [05-11-2024]
# Versión          : 1.0
# Arquitectura     : ARM64 en AWS EC2
# ------------------------------------------------------------------------------
public class MinFinder
{
    public static int FindMinimum(int[] array)
    {
        if (array == null || array.Length == 0)
            throw new ArgumentException("Array cannot be null or empty");
            
        int min = array[0];  // Start with first element
        
        for (int i = 1; i < array.Length; i++)
        {
            if (array[i] < min)
                min = array[i];
        }
        
        return min;
    }
}
# -------------------------------------------------------------------------------
.global find_minimum
    .text

// X0 contains the address of the array
// X1 contains the length of the array
find_minimum:
    // Input validation
    cbz     x1, array_empty     // If length is 0, branch to error
    cbz     x0, array_empty     // If array pointer is null, branch to error

    // Load first element as initial minimum
    ldr     w2, [x0]           // w2 = min = array[0]
    mov     w3, #1             // w3 = i = 1 (loop counter)

loop:
    cmp     w3, w1             // Compare i with array length
    b.ge    done               // If i >= length, exit loop
    
    // Load array[i]
    lsl     w4, w3, #2         // w4 = i * 4 (multiply by 4 for int size)
    add     x4, x0, x4         // x4 = array + i*4
    ldr     w5, [x4]           // w5 = array[i]
    
    // Compare with current minimum
    cmp     w5, w2             // Compare array[i] with min
    b.ge    continue           // If array[i] >= min, skip update
    mov     w2, w5             // Update min = array[i]

continue:
    add     w3, w3, #1         // i++
    b       loop               // Continue loop

done:
    mov     w0, w2             // Return minimum value
    ret

array_empty:
    // In real code, you'd want proper error handling here
    mov     w0, #0x80000000    // Return integer min value to indicate error
    ret
